import paho.mqtt.client as mqtt
import RPi.GPIO as GPIO
import time

def capture_image():
    cap = cv2.VideoCapture(0)
    # Capture an image
    ret, frame = cap.read()
    # Convert the image to bytes
    img_byte_array = io.BytesIO()
    img = Image.fromarray(cv2.cvtColor(frame, cv2.COLOR_BGR2RGB))
    return img
    
# Callback function to handle connection status
def on_connect(client, userdata, flags, rc):
    if rc == 0:
        print("Connected to MQTT broker")
    else:
        print("Connection failed")

# Callback function to handle publishing acknowledgements
def on_publish(client, userdata, mid):
    print("Message published")

# Callback function to handle incoming messages
def on_message(client, userdata, msg):
    message = msg.payload.decode("utf-8")
    if message.topic == topic_subscribe_def and message == "System off":
        print("Received 'System off' command. Stopping...")
        client.loop_stop()
        GPIO.cleanup()
        exit()
            
    elif message.topic == topic_subscribe and message == "Switch On":
        img = caputure_image()
        client.publish(topic_publish, img)
        
# Assign callback functions
client = mqtt.Client("Broker")
client.on_connect = on_connect
client.on_publish = on_publish
client.on_message = on_message

topic_subscribe_def = "computer_status"
topic_subscribe = "camera_status"
topic_publish = "camera_database"

client.connect("localhost", 1883)
client.subscribe(topic_subscribe)
client.loop_start()
